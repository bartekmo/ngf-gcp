{% import "path_utils.jinja" as path_utils with context %}

{% set project = env["project"] %}
{% set deployment = env["deployment"] %}
{% set name = "%s-vm-tmpl" % env["name"] %}
{% set instanceName = properties["instanceName"] %}
{% set zone = properties["zone"] %}
{% set machineType = properties["machineType"] %}
{% set network = path_utils.networkPath(properties["network"]) %}
{% set subnetwork = properties["subnetwork"] %}
{% set bootDiskType = properties["bootDiskType"] %}
{% set bootDiskSizeGb = properties["bootDiskSizeGb"] %}
{% set hasExternalIP = "Ephemeral" %}
{# Software status only works if the VM has an external IP. #}
{% set enableStatusWaiter = hasExternalIP %}
{% set canIpForward = "On" %}

resources:
  - name: {{ name }}
    type: vm_instance.py
    properties:
      instanceName: {{ instanceName }}
      sourceImage: https://www.googleapis.com/compute/v1/projects/barracuda-release/global/images/cudangccbyol-v720-158-20171219
      zone: {{ zone }}
      machineType: {{ machineType }}
      network: {{ network }}
      {% if subnetwork %}
      subnetwork: {{ subnetwork }}
      {% endif %}
      bootDiskType: {{ bootDiskType }}
      bootDiskSizeGb: {{ bootDiskSizeGb }}
      hasExternalIP: {{ hasExternalIP }}
      canIpForward: {{ canIpForward }}
      serviceAccounts:
        - email: default
          scopes:
            - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
            - 'https://www.googleapis.com/auth/logging.write'
            - 'https://www.googleapis.com/auth/monitoring.write'
            - 'https://www.googleapis.com/auth/compute.readonly'
      metadata:
        items:
          - key: ngcc_initial_user_password
            value: $(ref.generated-password-0.password)
      tags:
        items:
          - {{ env["deployment"] }}-ngcc
  - name: generated-password-0
    type: password.py
    properties:
      length: 8
      includeSymbols: True
  - name: {{ env["deployment"] }}-ngcc-mgmt
    type: compute.v1.firewall
    properties:
      network: {{ network }}
      {% if properties.get("adminSourceRanges") %}
      sourceRanges:
        {% for source in properties["adminSourceRanges"].split(',') %}
        - '{{ source | trim }}'
        {% endfor %}
      {% else %}
      sourceRanges: ["0.0.0.0/0"]
      {% endif %}
      targetTags: ["{{ env["deployment"] }}-ngcc"]
      allowed:
        - IPProtocol: TCP
          ports: ["807","806"]
  - name: {{ env["deployment"] }}-ngcc-mvpn
    type: compute.v1.firewall
    properties:
      network: {{ network }}
      sourceRanges: ["0.0.0.0/0"]
      targetTags: ["{{ env["deployment"] }}-ngcc"]
      allowed:
        - IPProtocol: TCP
          ports: ["692"]
        - IPProtocol: UDP
          ports: ["692"]

outputs:
  - name: deployment
    value: {{ deployment }}
  - name: password0
    value: $(ref.generated-password-0.password)
  - name: project
    value: {{ project }}
  - name: vmId
    value: $(ref.{{ instanceName }}.id)
  - name: vmInternalIP
    value: $(ref.{{ name }}.internalIP)
  - name: vmPublicIP
    value: $(ref.{{ instanceName }}.networkInterfaces[0].accessConfigs[0].natIP)
  - name: vmName
    value: {{ instanceName }}
  - name: vmSelfLink
    value: $(ref.{{ instanceName }}.selfLink)
